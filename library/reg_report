#!/usr/bin/python

# import some python modules that we'll use.  These are all
# available in Python's core

import json
import os
from os import listdir
from os.path import isfile, join
from os import walk

from ansible.module_utils.basic import AnsibleModule
from ansible.module_utils.pycompat24 import get_exception
from ansible.module_utils.six import b
from ansible.module_utils._text import to_bytes, to_native

def get_state(b_path):
    ''' Find out current state '''

    if os.path.lexists(b_path):
        if os.path.isdir(b_path):
            return 'directory'
        else:
            # could be many other things, but defaulting to file
            return 'not_directory'
    return 'absent'

def main():

    module = AnsibleModule(
        argument_spec=dict(
            path=dict(aliases=['dest', 'name'], required=True, type='path'),
            title=dict(required=True),
            diff_peek=dict(default=None)
        )
    )

    params = module.params
    title = params['title']
    diff_peek = params['diff_peek']

 # modify source as we later reload and pass, specially relevant when used by other modules.
    path = params['path']
    b_path = to_bytes(path, errors='surrogate_or_strict')

    # short-circuit for diff_peek
    if diff_peek is not None:
        appears_binary = False
        try:
            f = open(b_path, 'rb')
            head = f.read(8192)
            f.close()
            if b("\x00") in head:
                appears_binary = True
        except:
            pass
        module.exit_json(path=path, changed=False, appears_binary=appears_binary)
    
    prev_state = get_state(b_path)

    if prev_state != 'directory':
        module.fail_json(msg='path have to be directory')

### Get all file names under path ###
    onlyfiles = [f for f in listdir(path) if isfile(join(path, f))]
    f = []
    for (dirpath, dirnames, filenames) in walk(path):
        f.extend(filenames)
        break




    module.exit_json(changed=True, state=title)
    module.fail_json(path=path, msg='unexpected position reached')

if __name__ == '__main__':
    main() 

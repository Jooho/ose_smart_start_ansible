---
- set_fact:
     project_name: "regression-test"

- name: Delete test result File
  file: path={{regression_result_path}}/{{ item }} state=absent force=yes 
  run_once: true
  with_items:
     - "{{ role_path|basename }}_result_1"
     - "{{ role_path|basename }}_raw_1"
  delegate_to: localhost

- name: Create test result File
  file: path={{regression_result_path}}/{{ item }} state=touch mode=777
  run_once: true
  with_items:
     - "{{ role_path|basename }}_result_1"
     - "{{ role_path|basename }}_raw_1"
  delegate_to: localhost

- name: docker login with external registry from master node
  shell: "{{ item }}"
  with_items:
    - "oc login -u '{{oc_login.user_id}}' -p '{{oc_login_password}}' --insecure-skip-tls-verify --server={{oc_login.url}}"
    - "docker login -u '{{internal_registry.user_id}}' -e {{internal_registry.email}} -p $(oc whoami -t) {{internal_registry.url}}"
  delegate_to: "{{ groups.masters.0 if remote_test_host == ' ' else remote_test_host}}"
  register: docker_login

- name: Check if regression test project exist
  shell: "oc project {{project_name}}"
  ignore_errors: true
  register: regression_project_exist

- name: Create regression test project if it does not exist
  shell: "oc new-project {{project_name}}"
  when: regression_project_exist|failed

- name: docker push test from master node
  shell: "{{ item }}"
  ignore_errors: true
  with_items:
     - "docker pull busybox"
     - "docker tag -f docker.io/library/busybox {{internal_registry.url}}/{{project_name}}/busybox "
     - "docker push {{internal_registry.url}}/{{project_name}}/busybox"
  delegate_to: "{{ groups.masters.0 if remote_test_host == ' ' else remote_test_host}}"
  register: docker_push_test

- name: docker pull test from master node
  shell: "{{ item }}"
  ignore_errors: true
  with_items:
     - "docker pull {{internal_registry.url}}/{{project_name}}/busybox"
  delegate_to: "{{ groups.masters.0 if remote_test_host == ' ' else remote_test_host}}"
  register: docker_pull_test

- name: Generate result report - oc_login/docker_login
  shell: echo "{{item[1]}}:{{'FAIL' if item[0].rc != 0 else 'SUCCESS'}} " >> {{regression_result_path}}/{{ role_path|basename }}_raw_1
  delegate_to: localhost
  with_nested:
     - "{{ docker_login.results }}" 
     - [ '1_oc_login', '2_docker_login' ]

- name: Generate result report - docker pull,tag,push busybox
  shell: echo "{{item[1]}}:{{'FAIL' if item[0].rc != 0 else 'SUCCESS'}} " >> {{regression_result_path}}/{{ role_path|basename }}_raw_1
  delegate_to: localhost
  run_once: yes
  with_nested:
     - "{{ docker_push_test.results }}" 
     - [ '3_docker_pull_from_docker_io' , '4_docker_tag' , '5_docker_push_to_internal']

- name: Generate result report - docker pull pushed image
  shell: echo "6.docker_pull_from_internal:{{'FAIL' if item.rc != 0 else 'SUCCESS'}} " >> {{regression_result_path}}/{{ role_path|basename }}_raw_1
  delegate_to: localhost
  with_items:
     - "{{ docker_pull_test.results }}" 

- name: Clean up from master node
  shell: "{{ item }}"
  ignore_errors: true
  with_items:
     - "docker rmi {{internal_registry.url}}/{{project_name}}/busybox"
     - "docker rmi docker.io/busybox"
     - "oc delete project {{project_name}}"
  delegate_to: "{{ groups.masters.0 if remote_test_host == ' ' else remote_test_host}}"
  register: clean_data

- name: Generate result report - Clean up tested data
  shell:  echo "{{item[1]}}:{{'FAIL' if item[0].rc != 0 else 'SUCCESS'}} " >> {{regression_result_path}}/{{ role_path|basename }}_raw_1
  delegate_to: localhost
  with_nested:
     - "{{ clean_data.results }}"
     - [ '7_remove_internal_image' , '8_remove_dockerio_image' , '9_remove_test_project']

- name: Reformat result file
  shell: cat {{regression_result_path}}/{{ role_path|basename }}_raw_1|sort|uniq|tr '\n' ' ' >>  {{regression_result_path}}/{{ role_path|basename }}_result_1
  delegate_to: localhost





---
 - include: ../common/master_config_facts.yaml

 - name: Check if S2I build is working properly
   hosts: minishift.example.com
   gather_facts: false

   pre_tasks:
   - name: set concurrent path
     local_action: command pwd
     register: pwd

   - name: set_facts - pwd_path
     set_fact:
        pwd_path: "{{pwd.stdout}}"
        regression_result_path: "/tmp"
        role_path: reg_sdn_check
        master_list: "{{groups.masters}}"


   roles:
    - { role: conf_pre_requisites }

#   - name: Execute "curl" command to get SSL page
#     get_url: 
#         url:  https://secure-hello-openshift.sbx.cloudapps.ao.dcn 
#         dest: /tmp/test.out
#         validate_certs: no
#     register: curl_result
#
#   - name: Execute 'oc get hostsubnet'
#     shell: oc get hostsubnet
#     run_once: true
#     delegate_to: "{{groups.masters.0}}"
#     register: hostsubnet
  
 #- name: Fetch raw result file
 #  fetch: src={{regression_result_path}}/{{ role_path|basename }}_raw_1 dest={{regression_result_path}}
 #  delegate_to: localhost
 
#   - name: Copy raw result file to all hosts
#     copy: content="{{hostsubnet.stdout}}" dest="{{regression_result_path}}/{{ role_path|basename }}_raw_1"
#     delegate_to: localhost

#   - name: Node Target List 
#     shell: echo -n "{{item}}|" >> {{regression_result_path}}/{{ role_path|basename }}_temp_1
#     delegate_to: localhost
#     register: master_list
#     with_items:
#         - "{{groups.masters}}"

   
#   - shell: echo {{master_list}} |sed 's/,/|/g; s/\[u/''/g ; s/\]/''/g; s/| u/|/g'
#     register: master_list

#   - name: List up ping target list from hostsubnet information
#     shell: cat {{regression_result_path}}/{{ role_path|basename }}_raw_1 |egrep -v "NAME|{{inventory_hostname}}|{{master_list.stdout}}"
#     when: "{{firewall_between_master_node}}"
#     register: ping_master_target_list
#
     #shell: cat {{regression_result_path}}/{{ role_path|basename }}_raw_1 |egrep -v "NAME|{{inventory_hostname}}|{{groups.nodes}}}|awk '{print $4}'|sed 's/0\/24/1/g'
 
# - name: Execute Ping test
#   shell: ping -c 1 {{ item }}|grep "packets transmitted" |awk '{print "{{inventory_hostname}} {{item}} "   $6}'
#   when:
#   with_items:
#      - "{{ping_target_list.stdout_lines}}"
#   register: ping_test_result

